  let map:forall a. forall b. (a -> b) -> list a -> list b =
    tfun a b => 
    let mapab (f:a -> b) (l:list a) : list b =
      match l with
      | nil => (nil : list b)
      | hd::tl => (f hd)::(mapab f tl) 
      end
    in
    mapab
in
map [int] [int] (fun (x:int) => x+1) (1::2::3::4::(nil:list int))
